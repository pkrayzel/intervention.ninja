{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudFormation Template for project Intervention Ninja",
  "Parameters" : {
    "MailUsername": {
      "Type": "String",
      "Description" : "Mail username"
    },
    "MailPassword": {
      "NoEcho": "true",
      "Type": "String",
      "Description" : "Mail password"
    },
    "CertificateArn": {
      "Type": "String",
      "Description" : "Certificate ARN in us-east region for edge-optimized domain with API Gateway",
      "Default": "arn:aws:acm:us-east-1:166058053690:certificate/6d58bf91-665c-4624-b514-667ae88f805d"
    },
    "HostedZoneId": {
      "Type": "String",
      "Description" : "HostedZoneId of the domain which will be prefixed with \"api.\" and routed to API Gateway",
      "Default": "Z18KK2TQ1MWP99"
    }
  },
  "Resources" : {
    "ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": { "Service": ["apigateway.amazonaws.com"] },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Policies": [{
          "PolicyName": "ApiGatewayLogsPolicy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": ["logs:*"],
              "Resource": "*"
            }]
          }
        }]
      }
    },
    "ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {"Fn::GetAtt": ["ApiGatewayCloudWatchLogsRole", "Arn"] }
      }
    },
    "ApiDomainName": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "CertificateArn": { "Ref": "CertificateArn" },
        "DomainName": "api.intervention.ninja",
        "EndpointConfiguration" : {
          "Types" : ["EDGE"]
        }
      },
      "DependsOn": ["ApiStage"]
    },
    "ApiBasePathMapping": {
      "Type" : "AWS::ApiGateway::BasePathMapping",
      "Properties" : {
        "BasePath" : "v1",
        "DomainName" : "api.intervention.ninja",
        "RestApiId": {"Ref": "RestApi"},
        "Stage" : "prod"
      },
      "DependsOn": ["ApiDomainName", "RestApi"]
    },
    "ApiStage": {
      "DependsOn": ["ApiGatewayAccount"],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {"Ref": "ApiDeployment"},
        "MethodSettings": [{
          "DataTraceEnabled": true,
          "HttpMethod": "*",
          "LoggingLevel": "INFO",
          "ResourcePath": "/*"
        }],
        "RestApiId": {"Ref": "RestApi"},
        "StageName": "prod",
        "Variables": {}
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["EmailsPOST", "EmailsOPTIONS"],
      "Properties": {
        "RestApiId": {"Ref": "RestApi"}
      }
    },
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Intervention Ninja Rest API",
        "Description": "Intervention Ninja Email Sender Rest API"
      }
    },
    "Route53RecordSetApi": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name" : "api.intervention.ninja",
        "Type" : "A",
        "HostedZoneId" : { "Ref": "HostedZoneId" },
        "AliasTarget" : {
          "DNSName" : { "Fn::GetAtt" : [ "ApiDomainName", "DistributionDomainName" ] },
          "EvaluateTargetHealth" : false,
          "HostedZoneId" : "Z2FDTNDATAQYW2"
        }
      },
      "DependsOn": ["ApiDomainName"]
    },
    "EmailsResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "RestApi"},
        "ParentId": {"Fn::GetAtt": ["RestApi", "RootResourceId"]},
        "PathPart": "emails"
      }
    },
    "EmailsPOST": {
      "DependsOn": "LambdaPermission",
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Join": ["",
            ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["InterventionNinjaEmailSender", "Arn"]}, "/invocations"]
          ]},
          "IntegrationResponses": [{
            "StatusCode": 200,
            "ResponseTemplates": {
              "application/json": "$input.json('$')"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            }
          }],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestTemplates": {
            "application/json": {"Fn::Join": ["", [
              "#set($allParams = $input.params())\n",
              "{\n",
              "  \"body\": $input.json('$'),\n",
              "  \"params\" : {\n",
              "    #foreach($type in $allParams.keySet())\n",
              "      #set($params = $allParams.get($type))\n",
              "      \"$type\" : {\n",
              "        #foreach($paramName in $params.keySet())\n",
              "          \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\n",
              "          #if($foreach.hasNext),#end\n",
              "        #end\n",
              "      }\n",
              "    #if($foreach.hasNext),#end\n",
              "    #end\n",
              "  },\n",
              "  \"stage-variables\": {\n",
              "    #foreach($key in $stageVariables.keySet())\n",
              "      \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n",
              "      #if($foreach.hasNext),#end\n",
              "    #end\n",
              "  },\n",
              "  \"context\" : {\n",
              "    \"account-id\" : \"$context.identity.accountId\",\n",
              "    \"api-id\" : \"$context.apiId\",\n",
              "    \"api-key\" : \"$context.identity.apiKey\",\n",
              "    \"authorizer-principal-id\" : \"$context.authorizer.principalId\",\n",
              "    \"caller\" : \"$context.identity.caller\",\n",
              "    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\",\n",
              "    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\",\n",
              "    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\",\n",
              "    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\",\n",
              "    \"http-method\" : \"$context.httpMethod\",\n",
              "    \"stage\" : \"$context.stage\",\n",
              "    \"source-ip\" : \"$context.identity.sourceIp\",\n",
              "    \"user\" : \"$context.identity.user\",\n",
              "    \"user-agent\" : \"$context.identity.userAgent\",\n",
              "    \"user-arn\" : \"$context.identity.userArn\",\n",
              "    \"request-id\" : \"$context.requestId\",\n",
              "    \"resource-id\" : \"$context.resourceId\",\n",
              "    \"resource-path\" : \"$context.resourcePath\"\n",
              "  }\n",
              "}"
            ]]}
          }
        },
        "RequestParameters": {},
        "ResourceId": {"Ref": "EmailsResource"},
        "RestApiId": {"Ref": "RestApi"},
        "MethodResponses": [{
          "ResponseModels": {
            "application/json": "Empty"
          },
          "ResponseParameters": {
            "method.response.header.Access-Control-Allow-Origin": true
          },
          "StatusCode": 200
        }]
      }
    },
    "EmailsOPTIONS": {
      "DependsOn": "LambdaPermission",
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [{
            "StatusCode": 200,
            "ResponseTemplates": {
              "application/json": "$input.json('$')"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
              "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            }
          }],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestTemplates": {
              "application/json": "{\"statusCode\": 200}"
          }
        },
        "ResourceId": {"Ref": "EmailsResource"},
        "RestApiId": {"Ref": "RestApi"},
        "MethodResponses": [{
          "ResponseModels": {
            "application/json": "Empty"
          },
          "ResponseParameters": {
            "method.response.header.Access-Control-Allow-Headers": true,
            "method.response.header.Access-Control-Allow-Methods": true,
            "method.response.header.Access-Control-Allow-Origin": true
          },
          "StatusCode": 200
        }]
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["InterventionNinjaEmailSender", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "RestApi"}, "/*"]]}
      }
    },
    "InterventionNinjaEmailSender": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "intervention_ninja.lambda_handler",
        "Role": { "Fn::GetAtt" : ["InterventionNinjaLambdaExecutionRole", "Arn"] },
        "Description": "Sends emails to users from intervention ninja",
        "FunctionName": "intervention_ninja_email_sender",
        "MemorySize": 128,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "MAIL_USERNAME": { "Ref": "MailUsername" },
            "MAIL_PASSWORD": { "Ref": "MailPassword" }
          }
        },
        "Code": {
          "S3Bucket" : "intervention-ninja-deployment-support",
          "S3Key" : "lambda_dist.zip"
        },
        "Runtime": "python3.6"
      },
      "DependsOn" : ["InterventionNinjaLambdaExecutionRole"]
    },
    "InterventionNinjaLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties":
      {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal":
              {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/serviceroles/",
        "Policies": [
          {
            "PolicyName": "CloudWatchLogs",
            "PolicyDocument":
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "DynamoDBReadWriteAccess",
            "PolicyDocument":
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Scan"
                  ],
                  "Resource": {"Fn::Join": ["",
                    ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":166058053690:table/intervention_ninja*"]
                  ]}
                }
              ]
            }
          }
        ]
      }
    },
    "InterventionNinjaEmailsTable": {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "timestamp",
            "AttributeType" : "N"
          },
          {
            "AttributeName" : "email",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "timestamp",
            "KeyType": "HASH"
          },
          {
            "AttributeName" : "email",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5",
          "WriteCapacityUnits" : "5"
        },
        "TableName" : "intervention_ninja_emails"
      }
    },
    "InterventionNinjaIPsTable": {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions": [
          {
            "AttributeName": "timestamp",
            "AttributeType": "N"
          },
          {
            "AttributeName": "ip_address",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "timestamp",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "ip_address",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "TableName": "intervention_ninja_ips"
      }
    }
  }
}